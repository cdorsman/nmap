[build-system]
requires = ["hatchling"]
build-backend = "hatchling.build"

[project]
name = "ansible-nmap"
version = "1.0.0"
description = "Ansible module for nmap network scanning"
readme = "README.md"
requires-python = ">=3.10"
license = {text = "MIT"}
authors = [
  { name="Ansible Automation" },
]
classifiers = [
    "Programming Language :: Python :: 3",
    "License :: OSI Approved :: MIT License",
    "Operating System :: OS Independent",
]

[project.urls]
"Homepage" = "https://github.com/ansible/ansible-collections"

[tool.hatch.build.targets.wheel]
packages = ["library"]

[project.optional-dependencies]
dev = [
    "pytest>=7.0.0",
    "black>=23.0.0",
    "flake8>=6.0.0",
    "requests>=2.28.0",
]

[tool.pytest]
testpaths = ["tests"]
python_files = "test_*.py"
markers = [
    "unit: marks tests as unit tests",
    "regression: marks tests as regression tests",
    "functional: marks tests as functional tests",
    "integration: marks tests as integration tests",
]

[tool.pytest.ini_options]
addopts = "--strict-markers"

# Add the current directory to module path
pythonpath = ["."]

[tool.black]
line-length = 88
target-version = ["py38"]
include = '\.pyi?$'

[tool.flake8]
max-line-length = 88
extend-ignore = "E203"
exclude = [
    ".git",
    "__pycache__",
    "build",
    "dist",
]

[tool.coverage.paths]
source = [
    "library/",
    "tests/"
]

[tool.coverage.report]
show_missing = true

[tool.tox]
legacy_tox_ini = """
[tox]
envlist = py310, py311, py312, py312, lint
isolated_build = True
skip_missing_interpreters = True

[testenv]
deps =
    pytest>=7.0.0
    pytest-cov>=4.0.0
    ansible-core>=2.9.0
    pyyaml>=6.0
    mock>=4.0.0
commands =
    pytest {posargs:tests} --cov=library --cov-report=term-missing -k "not Antipatterns"

[testenv:lint]
deps =
    black>=23.0.0
    flake8>=6.0.0
commands =
    black --check library tests
    flake8 library tests

[testenv:format]
deps =
    black>=23.0.0
commands =
    black library tests
"""